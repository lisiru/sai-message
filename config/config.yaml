# MySQL 数据库相关配置
mysql:
  host: 1 # MySQL 机器 ip 和端口，默认 127.0.0.1:3306
  username: root # MySQL 用户名(建议授权最小权限集)
  password:  # MySQL 用户密码
  database: # iam 系统所用的数据库名
  max-idle-connections: 100 # MySQL 最大空闲连接数，默认 100
  max-open-connections: 100 # MySQL 最大打开的连接数，默认 100
  max-connection-life-time: 10s # 空闲连接最大存活时间，默认 10s
  log-level: 4 # GORM log level, 1: silent, 2:error, 3:warn, 4:info
server:
  mode: debug # server mode: release, debug, test，默认 release
  healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
  middlewares:  # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
  max-ping-count: 3 # http 服务启动后，自检尝试次数，默认 3
insecure:
  bind-address: 127.0.0.1 # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
  bind-port: 9394 # 提供非安全认证的监听端口，默认为 8080
log:
  name: apiserver-demo # Logger的名字
  development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
  level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, error, dpanic, panic, fatal。
  format: json # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。
  enable-color: true # 是否开启颜色输出，true:是，false:否
  disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
  disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
  output-paths:  # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件。
  error-output-paths: # zap内部(非业务)错误日志输出路径，多个输出，逗号分开
# Redis 配置
redis:
  host:  # redis 地址，默认 127.0.0.1:6379
  port: 6379 # redis 端口，默认 6379
  password:  # redis 密码
  addrs:
  master-name: # redis 集群 master 名称
  username: # redis 登录用户名
  database: # redis 数据库
  optimisation-max-idle: 20 # redis 连接池中的最大空闲连接数
  optimisation-max-active: 10 # 最大活跃连接数
  timeout: 10 # 连接 redis 时的超时时间
  enable-cluster: false # 是否开启集群模式
  use-ssl: false # 是否启用 TLS
  ssl-insecure-skip-verify: false # 当连接 redis 时允许使用自签名证书
sms:
  secret-key: #秘钥，可在控制台查询
  secret-id:  #秘钥id ,可在控制台查询
  sms-sdk-app-id: #应用id
  Sign-name:  #申请的签名
  template-id:  #模板id
kafka:
  return-success: true
  host: